<!doctype html>
<head>
    <?php
    $title = "Первый тест";
    require "blocks/head.php";
    ?>
</head>

<header>
    <?php require "blocks/header.php" ?>
</header>
<body>
<div id="wrapper">
    <div id="leftCol">
        <div id="bigArticle">
            <iframe width="560" height="315" src="https://www.youtube.com/embed/OfbH8dJFz6M" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe>
            <!--            --><?php //require_once "tests/firstTest.php" ?>
            <h2>Урок на тему: примитивные типы данных в Java</h2>
            <p>В Java есть 8 примитивных типов данных:<br>

                <strong>Byte</strong><br>
                8-битное целое цисло<br>
                Максимальное значение: -128 (-2 ^ 7)<br>
                Минимальное значение: 127 (2 ^ 7 -1)<br>
                Значение по умлочанию: 0<br>
                Используется для экономии места в больших массивах. Чаще всего вместо int.<br>
                Пример: byte c = 65<br>

                <strong>SHORT</strong><br>
                16-битное целое цисло<br>
                Максимальное значение: -32,768 (-2 ^ 15)<br>
                Минимальное значение: 32,767 (2 ^ 15 – 1)<br>
                Значение по умлочанию: 0<br>
                Используется для экономии места вместо int.<br>
                Пример: short a = 20000, short b = -10000<br>

                <strong>INT</strong><br>
                32-битное целое цисло<br>
                Максимальное значение: -2,147,483,648 (-2 ^ 31)<br>
                Минимальное значение: 2,147,483,647 (-2 ^ 31 – 1)<br>
                Значение по умлочанию: 0<br>
                Используется для целых значений в случае, если нет дефицита памяти.<br>
                Пример: int i = 2000000000, int h = -1500000000<br>

                <strong>LONG</strong><br>
                64-битное целое цисло<br>
                Максимальное значение: -9,223,372,036,854,775,808 (-2 ^ 63)<br>
                Минимальное значение: 9,223,372,036,854,775,807 (-2 ^ 63 – 1)<br>
                Значение по умлочанию: 0L<br>
                Используется для хранения больших целичисленных значений.<br>
                Пример: long l = 5000000000L, long k = -4000000000L<br>

                <strong>float</strong><br>
                32-битное число с плавающей точкой IEEE 754<br>
                Значение по умлочанию: 0.0f<br>
                Используется для экономии памяти в больших массивах чисел с плавающей точкой.<br>
                Никогда не используется для хранения точных значений (например, денег).<br>
                Пример: float f = 112.3f<br>

                <strong>DOUBLE</strong><br>
                64-битное число двойной точности с плавающей точкой IEEE 754<br>
                Значение по умлочанию: 0.0d<br>
                Используется для хранения чисел с плавающей точкой (в большинстве случаев).<br>
                Никогда не используется для хранения точных значений (например, денег).<br>
                Пример: double d = 121.5<br>

                <strong>BOOLEAN</strong><br>
                В спецификации размер не указан. Зависит от типа JVM.<br>
                Возможные занчения: true/false<br>
                Значение по умлочанию: false<br>
                Используется для опрделения того, является ли условие истинным.<br>
                Пример: boolean flag = true<br>

                <strong>CHAR</strong><br>
                Символ кодировки Unicode 16-bit<br>
                Максимальное значение: ‘\u0000’ (или 0)<br>
                Минимальное значение: ‘uffff’ (или 65б535)<br>
                Используется для хранения любого символа<br>
                Пример: char c = ‘C’</p>
            <a href="firstArticle.php">
                <div class="more">Далее</div>
            </a>
        </div>
    </div>


    <?php require_once "blocks/rightCol.php" ?>

</div>
</body>

<footer>
    <?php require_once "blocks/footer.php" ?>
</footer>
